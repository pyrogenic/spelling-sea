{"version":3,"sources":["Puzzles.ts","useSessionState.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["a","require","useSessionState","keys","init","key","_","compact","join","useState","state","setState","ready","useRef","useEffect","sessionStorage","setItem","current","JSON","stringify","val","undefined","sessionValue","getItem","parse","error","console","ORDERS","PROGRESS","PuzzleComponent","puzzle","prevPuzzle","nextPuzzle","id","puzzleId","board","setBoard","initBoard","rack","setRack","initRack","React","shuffle","setShuffle","words","setWords","initWords","fails","setFails","initFails","order","setOrder","initOrder","progressView","setProgressView","initProgressView","done","onKeyPress","event","code","log","backspace","length","submit","ditto","shuffleBoard","play","newRack","pop","last","result","src","i","Math","floor","random","ex","splice","push","island","handler","handleEvent","window","addEventListener","removeEventListener","bind","orderedWords","useCallback","sort","letter","includes","noPlayReason","playTitle","word","alert","toUpperCase","Container","onMouseDown","e","preventDefault","Row","className","Col","xs","onClick","map","Board","Button","variant","disabled","title","size","ButtonGroup","as","orderVal","globetrotter","rackWord","startsWith","md","progressVal","LengthProgress","OverallProgress","CheatProgress","GlobetrotterProgress","highScore","score","playerScore","remain","reverse","rank","index","to","from","playerRank","achieved","filter","lengthProgress","forEach","total","found","mostWords","max","cols","Cell","type","onKeyUp","Array","isArray","sumBy","uniq","App","puzzles","setPuzzles","setPuzzle","initPuzzle","visitedPuzzles","setVisitedPuzzles","initVisitedPuzzles","getPuzzlesOnce","once","firstRun","getPuzzles","then","allPuzzles","flatten","Object","values","puzzleIndex","indexOf","find","p","DropdownButton","entries","groupIndex","Dropdown","Item","onSelect","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6dac3ed4.chunk.js","sourcesContent":["import Puzzle from \"./Puzzle\";\n\nexport async function getPuzzles(): Promise<Puzzles> {\n    return require(\"./puzzles.json\");\n} \n\nexport default interface Puzzles {\n    [root: string]: Puzzle[];\n}\n","import { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\nimport _ from \"lodash\";\n\nexport default function useSessionState<T extends undefined | number | string | boolean | {}>(\n    keys: Array<string | undefined>, init: T | (() => T)):\n    [T, Dispatch<SetStateAction<T>>, () => void] {\n    const key = _.compact(keys).join(\"/\");\n    const [state, setState] = useState<T>(init);\n    const ready = useRef({key: \"\"});\n    function reinit() {\n        let val: T | undefined = undefined;\n        const sessionValue = sessionStorage.getItem(key);\n        if (sessionValue !== null) {\n            try {\n                val = JSON.parse(sessionValue);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        if (val === undefined) {\n            if (typeof init === \"function\") {\n                val = init();\n            } else {\n                val = init;\n            }\n        }\n        // if (!_.isEqual(val, state)) {\n        setState(val!);\n        ready.current.key = key;\n        // }\n    }\n    useEffect(() => sessionStorage.setItem(ready.current.key, JSON.stringify(state)), [key, state]);\n    return [state, setState, reinit];\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Puzzles, { getPuzzles } from \"./Puzzles\";\nimport Puzzle from \"./Puzzle\";\nimport \"./App.css\";\nimport useSessionState from \"./useSessionState\";\nimport _ from \"lodash\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { FiCopy, FiRefreshCw, FiShuffle, FiDelete, FiChevronsRight, FiChevronsLeft } from \"react-icons/fi\";\n\ntype Order = \"found\" | \"alpha\" | \"length\";\nconst ORDERS: Order[] = [\"found\", \"alpha\", \"length\"];\n\ntype Progress = \"overall\" | \"length\" | \"distance\" | \"cheat\";\nconst PROGRESS: Progress[] = [\"overall\", \"length\", \"distance\" , \"cheat\"];\n\n//type PuzzleId = [root: string, island: string];\ntype PuzzleId = string;\n\nfunction App() {\n  const [puzzles, setPuzzles] = React.useState<Puzzles>({});\n  const [puzzle, setPuzzle, initPuzzle] = useSessionState<Puzzle | undefined>([\"puzzle\"], undefined);\n  const [visitedPuzzles, setVisitedPuzzles, initVisitedPuzzles] = useSessionState<PuzzleId[]>([\"visitedPuzzleIds\"], []);\n  const getPuzzlesOnce = React.useRef({ done: false });\n  const once = React.useRef({ firstRun: true });\n  \n  if (once.current.firstRun) {\n    once.current.firstRun = false;\n    initPuzzle();\n    initVisitedPuzzles();\n  }\n\n  React.useEffect(() => {\n    if (puzzle) {\n      const id: PuzzleId = puzzleId(puzzle);\n      if (!visitedPuzzles.includes(id)) {\n        setVisitedPuzzles([...visitedPuzzles, id]);\n      }\n    }\n  }, [puzzle, visitedPuzzles, setVisitedPuzzles]);\n\n  if (!getPuzzlesOnce.current.done) {\n    getPuzzlesOnce.current.done = true;\n    getPuzzles().then(setPuzzles);\n  }\n  const allPuzzles = React.useCallback(() => puzzles ? _.flatten(Object.values(puzzles)) : [], [puzzles]);\n  function nextPuzzle() {\n    if (puzzle) {\n      const puzzleIndex = visitedPuzzles.indexOf(puzzleId(puzzle));\n      if (puzzleIndex > 0 && puzzleIndex < visitedPuzzles.length - 1) {\n        const id = visitedPuzzles[puzzleIndex + 1];\n        const found = allPuzzles().find((p) => id === puzzleId(p));\n        return setPuzzle(found);\n      }\n    }\n    setPuzzle(_.shuffle(allPuzzles()).pop());\n  }\n  function prevPuzzle() {\n    if (puzzle) {\n      const puzzleIndex = visitedPuzzles.indexOf(puzzleId(puzzle));\n      if (puzzleIndex > 0) {\n        const id = visitedPuzzles[puzzleIndex - 1];\n        const found = allPuzzles().find((p) => id === puzzleId(p));\n        return setPuzzle(found);\n      }\n    }\n    setPuzzle(_.shuffle(allPuzzles()).pop());\n  }\n\n  return <Container><div className=\"fixed\">\n    {puzzle && <PuzzleComponent puzzle={puzzle} prevPuzzle={prevPuzzle} nextPuzzle={nextPuzzle} />}\n    <hr />\n    <Row>\n      <DropdownButton title=\"Choose a Puzzle\">\n        {Object.entries(puzzles).map(([, group], groupIndex) =>\n          group.map((e) => {\n            const { board, island, words } = e;\n            return <Dropdown.Item\n              key={`${groupIndex}.${island}`}\n              onSelect={setPuzzle.bind(null, e)}>\n              {island.toUpperCase()}+{board.join(\"\").toUpperCase()} ({words.length} words)\n          </Dropdown.Item>;\n          }))}\n      </DropdownButton>\n    </Row>\n  </div>\n  </Container>;\n}\n\nfunction PuzzleComponent({ puzzle, prevPuzzle, nextPuzzle }: { puzzle: Puzzle; prevPuzzle: () => void; nextPuzzle: () => void; }) {\n  // per-puzzle\n  const id = puzzleId(puzzle);\n  const [board, setBoard, initBoard] = useSessionState<string[]>([id, \"board\"], []);\n  const [rack, setRack, initRack] = useSessionState<string[]>([id, \"rack\"], []);\n  const [shuffle, setShuffle] = React.useState(0);\n  const [words, setWords, initWords] = useSessionState<string[]>([id, \"words\"], []);\n  const [fails, setFails, initFails] = useSessionState<string[]>([id, \"fails\"], []);\n\n  // global\n  const [order, setOrder, initOrder] = useSessionState<Order>([\"order\"], \"found\");\n  const [progressView, setProgressView, initProgressView] = useSessionState<Progress>([\"progress\"], \"overall\");\n\n  const skipResetOnRestore = React.useRef({ done: false });\n  React.useEffect(() => {\n    initBoard();\n    initRack();\n    initWords();\n    initFails();\n    initOrder();\n    initProgressView();\n  }, [id]);\n\n  function onKeyPress(event: KeyboardEvent) {\n    const { key, code } = event;\n    console.log(event);\n    switch (code) {\n      case \"Escape\":\n        setRack([]);\n        break;\n\n      case \"Delete\":\n      case \"Backspace\":\n        backspace();\n        break;\n\n      case \"Return\":\n      case \"Enter\":\n        if (rack.length) {\n          submit();\n        } else {\n          ditto();\n        }\n        break;\n\n      case \"Space\":\n        shuffleBoard();\n        break;\n\n      case \"Slash\":\n        ditto();\n        break;\n\n      case \"ArrowLeft\":\n        prevPuzzle();\n        break;\n\n      case \"ArrowRight\":\n        nextPuzzle();\n        break;\n\n      default:\n        play(key);\n        break;\n    }\n  }\n\n  function backspace() {\n    const newRack = [...rack];\n    newRack.pop();\n    setRack(newRack);\n  }\n\n  function ditto() {\n    const newRack = [..._.last(words)!];\n    setRack(newRack);\n  }\n\n  React.useEffect(() => {\n    const handler = { handleEvent: onKeyPress };\n    window.addEventListener(\"keyup\", handler);\n    return window.removeEventListener.bind(window, \"keyup\", handler);\n  });\n\n  function shuffleBoard() {\n    if (!puzzle) {\n      setBoard([]);\n      return;\n    }\n    const result: string[] = [];\n    const src = [...puzzle.board];\n    while (src.length > 0) {\n      const i = Math.floor(Math.random() * src.length);\n      const ex = src.splice(i, 1)[0];\n      result.push(ex);\n      if (result.length === 3) {\n        result.push(puzzle.island);\n      }\n    }\n    setBoard(result);\n  }\n\n  React.useEffect(shuffleBoard, [puzzle, shuffle]);\n\n  const orderedWords = React.useCallback(() => {\n    switch (order) {\n      case \"found\":\n        return words;\n      case \"alpha\":\n        return [...words].sort();\n      // case \"length\":\n      //   const groups = Object.entries(_.groupBy([...words].sort(), \"length\"));\n      //   return _.map(groups.sort(), \"\", \n    }\n  }, [words, order]);\n\n  function play(letter: string) {\n    if (board.includes(letter)) {\n      setRack([...rack, letter]);\n      return;\n    }\n  }\n  const submit = () => {\n    const word = rack.join(\"\");\n    if (words.includes(word)) {\n      alert(\"Already found!\");\n    } else if (puzzle?.words.includes(word)) {\n      setWords([...words, word]);\n    } else {\n      alert(noPlayReason ?? \"Not a word!\");\n      setFails([...fails, word]);\n    }\n    setRack([]);\n  };\n\n  let noPlayReason: string | undefined;\n  let playTitle: string | undefined;\n  if (!puzzle) {\n    noPlayReason = \"No Puzzle\";\n  } else {\n    if (rack.length < 4) {\n      noPlayReason = \"Play\";\n      playTitle = \"Too Short\";\n    } else if (!rack.includes(puzzle.island)) {\n      noPlayReason = `No ${puzzle.island.toUpperCase()}`;\n    } else if (words.includes(rack.join(\"\"))) {\n      noPlayReason = \"Already Played\";\n    } else if (fails.includes(rack.join(\"\"))) {\n      noPlayReason = \"Already Tried\";\n    }\n  }\n\n  return <Container onMouseDown={(e: any) => e.preventDefault()}>\n    <Row className=\"mb-2\">\n      <Col xs={\"auto\"} className=\"flex-fill\"  onClick={backspace}/>\n      <Col xs={\"auto\"}>\n        <Row>\n          <span className=\"rack-letter\">&nbsp;</span>\n          {rack.map((letter, i) => <span className={`rack-letter ${letter === puzzle.island ? \"rack-letter-island\" : \"\"}`} onClick={(e) => {\n            rack.splice(i, 1);\n            setRack([...rack]);\n          }}>{letter}</span>)}\n          <span className=\"rack-letter\">&nbsp;</span>\n        </Row>\n      </Col>\n      <Col xs={\"auto\"} className=\"flex-fill\"  onClick={backspace}/>\n    </Row>\n    {puzzle && <Row className=\"mb-2\">\n\n\n      <Col xs={\"auto\"} className=\"board-container\">\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Board board={board} play={play} />\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <Row className=\"mb-2 justify-content-center\">\n              <Button variant=\"primary\" disabled={noPlayReason !== undefined} title={playTitle} onClick={submit}>\n                {noPlayReason ?? \"Play\"}\n              </Button>\n            </Row>\n            <Row>\n              <Col xs=\"auto\" className=\"flex-fill\">\n                <Button size=\"sm\" variant=\"light\" onClick={setShuffle.bind(null, shuffle + 1)}>\n                  <FiShuffle title=\"Shuffle\" />\n                </Button>\n              </Col>\n              <ButtonGroup as={Col} xs=\"auto\">\n                <Button size=\"lg\" variant=\"light\" disabled={rack.length === 0} onClick={setRack.bind(null, [])}>\n                  <FiRefreshCw title=\"Reset\" />\n                </Button>\n                <Button size=\"lg\" variant=\"light\" disabled={rack.length === 0} onClick={backspace}>\n                  <FiDelete title=\"Delete\" />\n                </Button>\n                <Button size=\"lg\" variant=\"light\" disabled={words.length === 0} onClick={ditto}>\n                  <FiCopy title=\"Ditto\" />\n                </Button>\n              </ButtonGroup>\n              <Col xs=\"auto\" className=\"flex-fill\">\n                <ButtonGroup>\n                  <Button size=\"sm\" variant=\"light\" onClick={prevPuzzle}>\n                    <FiChevronsLeft title=\"Previous Puzzle\" />\n                  </Button>\n                  <Button size=\"sm\" variant=\"light\" onClick={nextPuzzle}>\n                    <FiChevronsRight title=\"Next Puzzle\" />\n                  </Button>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n      </Col>\n\n\n\n      <Col xs={\"auto\"} className=\"flex-fill\">\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <ButtonGroup size=\"sm\">\n              {ORDERS.map((orderVal) => <Button key={orderVal} variant={order === orderVal ? \"primary\" : \"outline-primary\"} onClick={setOrder.bind(null, orderVal)}>{orderVal}</Button>)}\n            </ButtonGroup>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n\n        <Row className=\"word-list\">\n          {orderedWords?.()?.map((word) => {\n            let className = globetrotter(word) ? \"globetrotter\" : undefined;\n            if (rack.length > 0) {\n              const rackWord = rack.join(\"\");\n              if (word.startsWith(rackWord)) {\n                if (word === rackWord) {\n                  className = \"already-played\";\n                } else {\n                  className = \"matches-prefix\";\n                }\n              } else {\n                className = \"does-not-match-prefix\";\n              }\n            }\n            return <div key={word} className={className}>{word}</div>;\n          })}\n        </Row>\n      </Col>\n\n\n\n\n\n      <Col md={4}>\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <ButtonGroup size=\"sm\">\n              {PROGRESS.map((progressVal) => <Button key={progressVal} variant={progressView === progressVal ? \"primary\" : \"outline-primary\"} onClick={setProgressView.bind(null, progressVal)}>{progressVal}</Button>)}\n            </ButtonGroup>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n        <Row>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            {\n              progressView === \"length\" ? <LengthProgress /> : progressView === \"overall\" ? <OverallProgress /> : progressView === \"cheat\" ? <CheatProgress /> : <GlobetrotterProgress />\n            }\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n      </Col>\n\n    </Row>}\n  </Container>;\n\n  function OverallProgress() {\n    if (!puzzle) {\n      return null;\n    }\n    const ranks = [\n      \"Matey\",\n      \"Swabby\",\n      \"Ensign\",\n      \"Coxwain\",\n      \"First Mate\",\n      \"Captain\",\n      \"Commodore\",\n      \"Admiral\",\n      \"Enlightened\",\n    ];\n    const highScore = score(puzzle.words);\n    const playerScore = score(words);\n    // const basicScore = <>{playerScore} / {highScore}</>;\n    let remain = highScore;\n    return <>\n      {ranks.reverse().map((rank, index) => {\n        const to = remain;\n        const from = Math.floor(remain * (2 / 3));\n        remain = from - 1;\n        const playerRank = (from <= playerScore && playerScore <= to);\n        const achieved = from < playerScore;\n        return <Row className={playerRank ? \"rank-current\" : achieved ? \"rank-past\" : \"rank-future\"}>\n          <Col>{from}</Col>\n          <Col>{playerRank ? playerScore : \"\"}</Col>\n          <Col>{to}</Col>\n          <Col>{rank}</Col>\n        </Row>;\n      })}\n\n    </>;\n  }\n\n  function GlobetrotterProgress() {\n    return puzzle ? <>{words.filter(globetrotter).length} / {puzzle.words.filter(globetrotter).length}</> : null;\n  }\n\n  function LengthProgress() {\n    const lengthProgress: Array<{ total: number; found: number; length: number; }> = [];\n    puzzle?.words.forEach((word) => {\n      const length = word.length;\n      if (!(length in lengthProgress)) {\n        lengthProgress[length] = { total: 0, found: 0, length };\n      }\n      lengthProgress[length].total += 1;\n    });\n    words.forEach((word) => {\n      const length = word.length;\n      lengthProgress[length].found += 1;\n    });\n\n    const mostWords = _.max(_.map(lengthProgress, \"total\")) ?? 0;\n    const cols: number[] = [];\n    for (let index = 0; index < mostWords; index++) {\n      cols[index] = index;\n    }\n\n    return <>{lengthProgress.sort().map(({ total, found, length }, index) => <Row key={index}>\n      <Col xs={1}>{length}</Col>\n      {cols.map((index) => <Col key={index} className={index < found ? \"marker-found\" : index < total ? \"marker-unfound\" : \"marker-blank\"} />)}\n    </Row>)}</>;\n  }\n\n  function CheatProgress() {\n    return <>\n      {puzzle?.words.map((word) => <span className=\"m-1\">{word}</span>)}\n    </>;\n  }\n}\n\nfunction puzzleId(puzzle: Puzzle): PuzzleId {\n  return [puzzle.island, ...puzzle.board].join(\"\");\n}\n\nfunction Board({ board, play }: { board: string[], play: (letter: string) => void }) {\n  return <Col xs={\"auto\"} className=\"board\">\n    <Row className=\"board-row-1\">\n      <Cell type=\"sea\" letter={board[0]} play={play} />\n      <Cell type=\"sea\" letter={board[1]} play={play} />\n      <Cell type=\"sea\" letter={board[2]} play={play} />\n    </Row>\n    <Row className=\"board-row-2\">\n      <Col className=\"sea\">\n      </Col>\n      <Cell type=\"island\" letter={board[3]} play={play} />\n      <Col className=\"sea\">\n      </Col>\n    </Row>\n    <Row className=\"board-row-3\">\n      <Cell type=\"sea\" letter={board[4]} play={play} />\n      <Cell type=\"sea\" letter={board[5]} play={play} />\n      <Cell type=\"sea\" letter={board[6]} play={play} />\n    </Row>\n  </Col>;\n}\n\nfunction Cell({ type, play, letter }: { type: \"sea\" | \"island\", play(letter: string): void, letter: string }) {\n  return <Col className={type} key={letter} onClick={play.bind(null, letter)} onKeyUp={console.log}>\n    {letter}\n  </Col>;\n\n}\n\nfunction score(words: string | string[]): number {\n  if (Array.isArray(words)) {\n    return _.sumBy(words, score);\n  }\n  if (words.length <= 4) {\n    return 1;\n  }\n  return words.length - 3 + (globetrotter(words) ? 7 : 0);\n}\n\nfunction globetrotter(words: string) {\n  const letters = _.uniq(words);\n  return letters.length === 7;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}