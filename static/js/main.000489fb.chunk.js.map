{"version":3,"sources":["../../src/ensureArray.ts","../../src/arraySetToggle.ts","../../src/arraySetAdd.ts","../../src/join.ts","../../src/useLocalState.ts","../../src/useStorageState.ts","../../src/classConcat.ts","Puzzles.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["exports","ensureArray","f","currentValue","a","fetch","response","json","console","text","error","ORDERS","PROGRESS","PuzzleComponent","puzzle","prevPuzzle","nextPuzzle","id","puzzleId","useLocalState","board","setBoard","rack","setRack","initRack","words","setWords","initWords","fails","setFails","initFails","React","useState","shuffle","setShuffle","reset","setReset","order","setOrder","progressView","setProgressView","firstRun","useRef","onKeyPress","event","key","code","backspace","length","submit","ditto","shuffleBoard","play","newRack","pop","_","last","result","src","i","Math","floor","random","ex","splice","push","island","useEffect","current","undefined","handler","handleEvent","window","addEventListener","removeEventListener","bind","orderedWords","useMemo","Object","entries","groupBy","sort","b","localeCompare","map","Number","letter","includes","noPlayReason","playTitle","word","join","alert","toUpperCase","onMouseDown","e","preventDefault","Row","className","Col","xs","onClick","Board","Button","variant","disabled","title","size","confirm","ButtonGroup","as","orderVal","classConcat","group","toString","globetrotter","rackWord","startsWith","md","progressVal","LengthProgress","OverallProgress","CheatProgress","GlobetrotterProgress","highScore","score","playerScore","remain","reverse","rank","index","to","from","playerRank","achieved","filter","lengthProgress","forEach","total","found","mostWords","max","cols","Cell","type","onKeyUp","log","Array","isArray","sumBy","uniq","App","puzzles","setPuzzles","setPuzzle","visitedPuzzles","setVisitedPuzzles","favoritePuzzles","setFavoritePuzzles","getPuzzlesOnce","done","getPuzzles","then","allPuzzles","useCallback","flatten","values","asc","puzzleIndex","indexOf","puzzleById","find","p","DropdownButton","groupIndex","Dropdown","Item","onSelect","compact","InputGroup","Prepend","arraySetToggle","Append","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.000489fb.chunk.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.ensureArray = void 0;\nfunction ensureArray(container, key) {\n    var value = container[key];\n    if (value !== undefined) {\n        return value;\n    }\n    return container[key] = new Array();\n}\nexports.ensureArray = ensureArray;\n//# sourceMappingURL=ensureArray.js.map","\"use strict\";\nexports.__esModule = true;\nexports.arraySetToggle = void 0;\nvar lodash_1 = require(\"lodash\");\nvar arraySetAdd_1 = require(\"./arraySetAdd\");\nvar ensureArray_1 = require(\"./ensureArray\");\n/**\n * @return true if the item is now in the list, false otherwise.\n */\nfunction arraySetToggle(container, key, value, sorted) {\n    if (container[key] === undefined) {\n        arraySetAdd_1.arraySetAdd(container, key, value, sorted);\n        return true;\n    }\n    var list = ensureArray_1.ensureArray(container, key);\n    var index = typeof value !== \"object\" ? list.indexOf(value) : list.findIndex(lodash_1.isEqual.bind(null, value));\n    if (index >= 0) {\n        list.splice(index, 1);\n        return false;\n    }\n    arraySetAdd_1.arraySetAdd(container, key, value, sorted);\n    return true;\n}\nexports.arraySetToggle = arraySetToggle;\n//# sourceMappingURL=arraySetToggle.js.map","\"use strict\";\nexports.__esModule = true;\nexports.arraySetAdd = void 0;\nvar lodash_1 = require(\"lodash\");\nvar ensureArray_1 = require(\"./ensureArray\");\n/**\n * @param container object with an array property called {@link key}\n * @param key name of an array property on {@link container}\n * @param value to add to the array set\n * @param sorted keeps the set in a particular order (see {@link ArraySetOrderRule} for more information).\n * @return [true] if {@link value} was newly-added to the set\n */\nfunction arraySetAdd(container, key, value, sorted) {\n    var list = ensureArray_1.ensureArray(container, key);\n    var index = typeof value !== \"object\" ? list.indexOf(value) : list.findIndex(lodash_1.isEqual.bind(null, value));\n    var notNew = index >= 0;\n    if (notNew) {\n        if (sorted !== \"mru\") {\n            return false;\n        }\n        else {\n            list.splice(index, 1);\n        }\n    }\n    list.push(value);\n    if (typeof sorted === \"function\") {\n        list.sort(sorted);\n    }\n    else if (sorted === true) {\n        list.sort();\n    }\n    return !notNew;\n}\nexports.arraySetAdd = arraySetAdd;\n//# sourceMappingURL=arraySetAdd.js.map","import compact from \"lodash/compact\";\nimport flattenDeep from \"lodash/flattenDeep\";\nexport default function join(sep) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var f = compact(flattenDeep(args));\n    switch (f.length) {\n        case 0:\n            return undefined;\n        case 1:\n            return f[0];\n        default:\n            return f.join(sep);\n    }\n}\n//# sourceMappingURL=join.js.map","import useStorageState from \"./useStorageState\";\nexport default function useLocalState(keys, defaultValue) {\n    return useStorageState(window.localStorage, keys, defaultValue);\n}\n//# sourceMappingURL=useLocalState.js.map","import React from \"react\";\nimport join from \"./join\";\nexport default function useStorageState(storage, keys, defaultValue) {\n    var _a;\n    var key = join(\":\", keys);\n    var _b = React.useMemo(function () {\n        if (storage === \"local\") {\n            storage = window.localStorage;\n        }\n        else if (storage === \"session\") {\n            storage = window.sessionStorage;\n        }\n        return [\n            storage.setItem.bind(storage, key),\n            storage.removeItem.bind(storage, key),\n            storage.getItem(key),\n        ];\n    }, [storage, key]), storageSet = _b[0], storageClear = _b[1], storageValue = _b[2];\n    var currentValue;\n    var resultValue;\n    if (storageValue !== null) {\n        try {\n            currentValue = (_a = JSON.parse(storageValue)) !== null && _a !== void 0 ? _a : undefined;\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    if (currentValue === undefined) {\n        if (typeof defaultValue === \"function\") {\n            resultValue = defaultValue();\n        }\n        else {\n            resultValue = defaultValue;\n        }\n    }\n    else {\n        resultValue = currentValue;\n    }\n    var _c = React.useState(resultValue), state = _c[0], setState = _c[1];\n    React.useEffect(stateToStorage, [state, storageSet, storageClear]);\n    React.useEffect(setState.bind(null, resultValue), [key, setState]);\n    return [state, setState, resetState];\n    function stateToStorage() {\n        storageSet(JSON.stringify(state));\n    }\n    function resetState() {\n        if (typeof defaultValue === \"function\") {\n            setState(defaultValue());\n        }\n        else {\n            setState(defaultValue);\n        }\n    }\n}\n//# sourceMappingURL=useStorageState.js.map","import join from \"./join\";\nvar classConcat = join.bind(null, \" \");\nexport default classConcat;\n//# sourceMappingURL=classConcat.js.map","import Puzzle from \"./Puzzle\";\n\nexport async function getPuzzles(): Promise<Puzzles> {\n    const response = await fetch(\"spelling-sea/puzzles.json\");\n    try {\n        return await response.json();\n    } catch (error) {\n        console.error(error, await (await fetch(\"spelling-sea/puzzles.json\")).text());\n        return {};\n    }\n}\n\nexport default interface Puzzles {\n    [root: string]: Puzzle[];\n}\n","import React from \"react\";\nimport {arraySetToggle} from \"@pyrogenic/asset/lib/arraySetToggle\";\nimport useLocalState from \"@pyrogenic/perl/lib/useLocalState\";\nimport classConcat from \"@pyrogenic/perl/lib/classConcat\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Puzzles, { getPuzzles } from \"./Puzzles\";\nimport Puzzle from \"./Puzzle\";\nimport \"./App.css\";\nimport _ from \"lodash\";\nimport ButtonGroup from \"react-bootstrap/esm/ButtonGroup\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { FiCopy, FiRefreshCw, FiShuffle, FiDelete, FiChevronsRight, FiChevronsLeft, FiPower, FiHeart } from \"react-icons/fi\";\nimport InputGroup from \"react-bootstrap/esm/InputGroup\";\n\ntype Order = \"found\" | \"alpha\" | \"length\";\nconst ORDERS: Order[] = [\"found\", \"alpha\", \"length\"];\n\ntype Progress = \"overall\" | \"length\" | \"distance\" | \"cheat\";\nconst PROGRESS: Progress[] = [\"overall\", \"length\", \"distance\" , \"cheat\"];\n\n//type PuzzleId = [root: string, island: string];\ntype PuzzleId = string;\n\nfunction App() {\n  const [puzzles, setPuzzles] = React.useState<Puzzles>({});\n  const [puzzle, setPuzzle] = useLocalState<Puzzle | undefined>(\"puzzle\", undefined);\n  const [visitedPuzzles, setVisitedPuzzles] = useLocalState<PuzzleId[]>(\"visitedPuzzleIds\", []);\n  const [favoritePuzzles, setFavoritePuzzles] = useLocalState<PuzzleId[]>(\"favoritePuzzleIds\", []);\n  const getPuzzlesOnce = React.useRef({ done: false });\n  // const once = React.useRef({ firstRun: true });\n  \n  // if (once.current.firstRun) {\n  //   once.current.firstRun = false;\n  //   initPuzzle();\n  //   initVisitedPuzzles();\n  // }\n\n  React.useEffect(() => {\n    if (puzzle) {\n      const id: PuzzleId = puzzleId(puzzle);\n      if (!visitedPuzzles.includes(id)) {\n        setVisitedPuzzles([...visitedPuzzles, id]);\n      }\n    }\n  }, [puzzle, visitedPuzzles, setVisitedPuzzles]);\n\n  if (!getPuzzlesOnce.current.done) {\n    getPuzzlesOnce.current.done = true;\n    getPuzzles().then(setPuzzles);\n  }\n  const allPuzzles = React.useCallback(() => puzzles ? _.flatten(Object.values(puzzles)) : [], [puzzles]);\n  function nextPuzzle() {\n    if (puzzle) {\n      const puzzleIndex = visitedPuzzles.indexOf(puzzleId(puzzle));\n      if (puzzleIndex > 0 && puzzleIndex < visitedPuzzles.length - 1) {\n        const id = visitedPuzzles[puzzleIndex + 1];\n        const found = allPuzzles().find((p) => id === puzzleId(p));\n        return setPuzzle(found);\n      }\n    }\n    setPuzzle(_.shuffle(allPuzzles()).pop());\n  }\n  function prevPuzzle() {\n    if (puzzle) {\n      const puzzleIndex = visitedPuzzles.indexOf(puzzleId(puzzle));\n      if (puzzleIndex > 0) {\n        const id = visitedPuzzles[puzzleIndex - 1];\n        const found = puzzleById(id);\n        return setPuzzle(found);\n      }\n    }\n    setPuzzle(_.shuffle(allPuzzles()).pop());\n  }\n\n  const asc = {favoritePuzzles};\n  return <div className=\"fixed\">\n    {puzzle && <PuzzleComponent puzzle={puzzle} prevPuzzle={prevPuzzle} nextPuzzle={nextPuzzle} />}\n    <hr />\n    <Row>\n    <Col>\n        <DropdownButton title=\"All Puzzles\">\n          {Object.entries(puzzles).map(([, group], groupIndex) =>\n            group.map((e) => {\n              const { board, island, words } = e;\n              return <Dropdown.Item\n                key={`${groupIndex}.${island}`}\n                onSelect={setPuzzle.bind(null, e)}>\n                {island.toUpperCase()}+{board.join(\"\").toUpperCase()} ({words.length} words)\n            </Dropdown.Item>;\n            }))}\n        </DropdownButton>\n      </Col>\n      <Col>\n        <DropdownButton title=\"In-Progress\">\n            {_.compact(visitedPuzzles.map(puzzleById)).map((e) => {\n              const { board, island, words } = e;\n              return <Dropdown.Item\n                key={puzzleId(e)}\n                onSelect={setPuzzle.bind(null, e)}>\n                {island.toUpperCase()}+{board.join(\"\").toUpperCase()} ({words.length} words)\n            </Dropdown.Item>;\n            })}\n        </DropdownButton>\n      </Col>\n      <Col>\n      <InputGroup>\n      <InputGroup.Prepend>\n          {puzzle && <Button\n            variant={favoritePuzzles.includes(puzzleId(puzzle)) ? \"success\" : \"outline-dark\"}\n            onClick={() => {\n              arraySetToggle(asc, \"favoritePuzzles\", puzzleId(puzzle));\n              setFavoritePuzzles([...favoritePuzzles]);\n            }}\n            ><FiHeart /></Button>}\n            </InputGroup.Prepend>\n            <InputGroup.Append>\n        <DropdownButton variant=\"success\" title=\"Favorites\">\n          {_.compact(favoritePuzzles.map(puzzleById)).map((e) => {\n            const { board, island, words } = e;\n            return <Dropdown.Item\n            key={puzzleId(e)}\n            onSelect={setPuzzle.bind(null, e)}>\n                {island.toUpperCase()}+{board.join(\"\").toUpperCase()} ({words.length} words)\n            </Dropdown.Item>;\n            })}\n        </DropdownButton>\n            </InputGroup.Append>\n          </InputGroup>\n      </Col>\n    </Row>\n  </div>;\n\n  function puzzleById(id: string) {\n    return allPuzzles().find((p) => id === puzzleId(p));\n  }\n}\n\nfunction PuzzleComponent({ puzzle, prevPuzzle, nextPuzzle }: { puzzle: Puzzle; prevPuzzle: () => void; nextPuzzle: () => void; }) {\n  // per-puzzle\n  const id = puzzleId(puzzle);\n  const [board, setBoard] = useLocalState<string[]>([id, \"board\"], []);\n  const [rack, setRack, initRack] = useLocalState<string[]>([id, \"rack\"], []);\n  const [words, setWords, initWords] = useLocalState<string[]>([id, \"words\"], []);\n  const [fails, setFails, initFails] = useLocalState<string[]>([id, \"fails\"], []);\n  const [shuffle, setShuffle] = React.useState(0);\n  const [reset, setReset] = React.useState(0);\n\n  // global\n  const [order, setOrder] = useLocalState<Order>([\"order\"], \"found\");\n  const [progressView, setProgressView] = useLocalState<Progress>([\"progress\"], \"overall\");\n\n  const firstRun = React.useRef(reset);\n  React.useEffect(() => {\n    if (firstRun.current !== reset){\n      firstRun.current = reset;\n      initRack();\n      initWords();\n      initFails();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [reset]);\n\n  React.useEffect(() => {\n    if (puzzle === undefined) {\n      shuffleBoard();\n    }\n  }, [puzzle, shuffleBoard]);\n\n  function onKeyPress(event: KeyboardEvent) {\n    const { key, code } = event;\n    switch (code) {\n      case \"Escape\":\n        setRack([]);\n        break;\n\n      case \"Delete\":\n      case \"Backspace\":\n        backspace();\n        break;\n\n      case \"Return\":\n      case \"Enter\":\n        if (rack.length) {\n          submit();\n        } else {\n          ditto();\n        }\n        break;\n\n      case \"Space\":\n        shuffleBoard();\n        break;\n\n      case \"Slash\":\n        ditto();\n        break;\n\n      case \"ArrowLeft\":\n        prevPuzzle();\n        break;\n\n      case \"ArrowRight\":\n        nextPuzzle();\n        break;\n\n      default:\n        play(key);\n        break;\n    }\n  }\n\n  function backspace() {\n    const newRack = [...rack];\n    newRack.pop();\n    setRack(newRack);\n  }\n\n  function ditto() {\n    const newRack = [..._.last(words)!];\n    setRack(newRack);\n  }\n\n  React.useEffect(() => {\n    const handler = { handleEvent: onKeyPress };\n    window.addEventListener(\"keyup\", handler);\n    return window.removeEventListener.bind(window, \"keyup\", handler);\n  });\n\n  function shuffleBoard() {\n    if (!puzzle) {\n      setBoard([]);\n      return;\n    }\n    const result: string[] = [];\n    const src = [...puzzle.board];\n    while (src.length > 0) {\n      const i = Math.floor(Math.random() * src.length);\n      const ex = src.splice(i, 1)[0];\n      result.push(ex);\n      if (result.length === 3) {\n        result.push(puzzle.island);\n      }\n    }\n    setBoard(result);\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(shuffleBoard, [puzzle, shuffle]);\n\n  type OrderedWords = Array<[group: string | number | undefined, words: string[]]>;\n\n  const orderedWords: OrderedWords = React.useMemo(() => {\n    switch (order) {\n      case \"found\":\n        return [[undefined, words]] as Array<[undefined, string[]]>;\n      case \"alpha\": {\n        const groups: Array<[string, string[]]> = Object.entries(_.groupBy([...words].sort(), \"0\"));\n        return groups.sort(([a], [b]) => a.localeCompare(b));\n      }\n      case \"length\":{\n        const groups: Array<[number, string[]]> = Object.entries(_.groupBy([...words].sort(), \"length\")).map(([a, b]) => [Number(a), b]);\n        return groups.sort(([a], [b]) => a-b);\n      }\n    }\n  }, [words, order]);\n\n  function play(letter: string) {\n    if (board.includes(letter)) {\n      setRack([...rack, letter]);\n      return;\n    }\n  }\n\n  const submit = () => {\n    const word = rack.join(\"\");\n    if (words.includes(word)) {\n      alert(\"Already found!\");\n    } else if (puzzle?.words.includes(word)) {\n      setWords([...words, word]);\n    } else {\n      alert(noPlayReason ?? \"Not a word!\");\n      setFails([...fails, word]);\n    }\n    setRack([]);\n  };\n\n  let noPlayReason: string | undefined;\n  let playTitle: string | undefined;\n  if (!puzzle) {\n    noPlayReason = \"No Puzzle\";\n  } else {\n    if (rack.length < 4) {\n      noPlayReason = \"Play\";\n      playTitle = \"Too Short\";\n    } else if (!rack.includes(puzzle.island)) {\n      noPlayReason = `No ${puzzle.island.toUpperCase()}`;\n    } else if (words.includes(rack.join(\"\"))) {\n      noPlayReason = \"Already Played\";\n    } else if (fails.includes(rack.join(\"\"))) {\n      noPlayReason = \"Already Tried\";\n    }\n  }\n\n  return <div onMouseDown={(e: any) => e.preventDefault()}>\n    <Row className=\"mb-2\">\n      <Col xs={\"auto\"} className=\"flex-fill\"  onClick={backspace}/>\n      <Col xs={\"auto\"}>\n        <Row>\n          <span className=\"rack-letter\">&nbsp;</span>\n          {rack.map((letter, i) => <span key={i} className={`rack-letter ${letter === puzzle.island ? \"rack-letter-island\" : \"\"}`} onClick={(e) => {\n            rack.splice(i, 1);\n            setRack([...rack]);\n          }}>{letter}</span>)}\n          <span className=\"rack-letter\">&nbsp;</span>\n        </Row>\n      </Col>\n      <Col xs={\"auto\"} className=\"flex-fill\"  onClick={backspace}/>\n    </Row>\n    {puzzle && <Row className=\"mb-2\">\n\n\n      <Col xs={\"auto\"} className=\"board-container\">\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Board board={board} play={play} />\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <Row className=\"mb-2 justify-content-center\">\n              <Button variant=\"primary\" disabled={noPlayReason !== undefined} title={playTitle} onClick={submit}>\n                {noPlayReason ?? \"Play\"}\n              </Button>\n            </Row>\n            <Row>\n              <Col xs=\"auto\" className=\"flex-fill\">\n              <Button size=\"sm\" variant=\"light\" onClick={() => window.confirm(\"Reset?\") && setReset(reset + 1)}>\n                  <FiPower title=\"Reset\" />\n                </Button>\n                <Button size=\"sm\" variant=\"light\" onClick={setShuffle.bind(null, shuffle + 1)}>\n                  <FiShuffle title=\"Shuffle\" />\n                </Button>\n              </Col>\n              <ButtonGroup as={Col} xs=\"auto\">\n                <Button size=\"lg\" variant=\"light\" disabled={rack.length === 0} onClick={setRack.bind(null, [])}>\n                  <FiRefreshCw title=\"Reset\" />\n                </Button>\n                <Button size=\"lg\" variant=\"light\" disabled={rack.length === 0} onClick={backspace}>\n                  <FiDelete title=\"Delete\" />\n                </Button>\n                <Button size=\"lg\" variant=\"light\" disabled={words.length === 0} onClick={ditto}>\n                  <FiCopy title=\"Ditto\" />\n                </Button>\n              </ButtonGroup>\n              <Col xs=\"auto\" className=\"flex-fill\">\n                <ButtonGroup>\n                  <Button size=\"sm\" variant=\"light\" onClick={prevPuzzle}>\n                    <FiChevronsLeft title=\"Previous Puzzle\" />\n                  </Button>\n                  <Button size=\"sm\" variant=\"light\" onClick={nextPuzzle}>\n                    <FiChevronsRight title=\"Next Puzzle\" />\n                  </Button>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n      </Col>\n\n\n\n      <Col xs={\"auto\"} className=\"flex-fill\">\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <ButtonGroup size=\"sm\">\n              {ORDERS.map((orderVal) => <Button key={orderVal} variant={order === orderVal ? \"primary\" : \"outline-primary\"} onClick={setOrder.bind(null, orderVal)}>{orderVal}</Button>)}\n            </ButtonGroup>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n\n        <Row className={classConcat(\"word-list\", order)}>\n          {orderedWords.map(([group, words]) => <>\n          {group !== undefined && <div className={classConcat(\"group\", order, group.toString())}>{group}</div>}\n          {words.map((word) => {\n            let className = globetrotter(word) ? \"globetrotter\" : undefined;\n            if (rack.length > 0) {\n              const rackWord = rack.join(\"\");\n              if (word.startsWith(rackWord)) {\n                if (word === rackWord) {\n                  className = \"already-played\";\n                } else {\n                  className = \"matches-prefix\";\n                }\n              } else {\n                className = \"does-not-match-prefix\";\n              }\n            }\n            return <div key={word} className={className}>{word}</div>;\n          })}</>)}\n        </Row>\n      </Col>\n\n\n\n\n\n      <Col md={4}>\n        <Row className=\"mb-2\">\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            <ButtonGroup size=\"sm\">\n              {PROGRESS.map((progressVal) => <Button key={progressVal} variant={progressView === progressVal ? \"primary\" : \"outline-primary\"} onClick={setProgressView.bind(null, progressVal)}>{progressVal}</Button>)}\n            </ButtonGroup>\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n        <Row>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n          <Col xs={\"auto\"}>\n            {\n              progressView === \"length\" ? <LengthProgress /> : progressView === \"overall\" ? <OverallProgress /> : progressView === \"cheat\" ? <CheatProgress /> : <GlobetrotterProgress />\n            }\n          </Col>\n          <Col xs={\"auto\"} className=\"flex-fill\" />\n        </Row>\n      </Col>\n\n    </Row>}\n  </div>;\n\n  function OverallProgress() {\n    if (!puzzle) {\n      return null;\n    }\n    const ranks = [\n      \"Matey\",\n      \"Swabby\",\n      \"Ensign\",\n      \"Coxwain\",\n      \"First Mate\",\n      \"Captain\",\n      \"Commodore\",\n      \"Admiral\",\n      \"Enlightened\",\n    ];\n    const highScore = score(puzzle.words);\n    const playerScore = score(words);\n    // const basicScore = <>{playerScore} / {highScore}</>;\n    let remain = highScore;\n    return <>\n      {ranks.reverse().map((rank, index) => {\n        const to = remain;\n        const from = Math.floor(remain * (2 / 3));\n        remain = from - 1;\n        const playerRank = (from <= playerScore && playerScore <= to);\n        const achieved = from < playerScore;\n        return <Row key={index} className={playerRank ? \"rank-current\" : achieved ? \"rank-past\" : \"rank-future\"}>\n          <Col>{from}</Col>\n          <Col>{playerRank ? playerScore : \"\"}</Col>\n          <Col>{to}</Col>\n          <Col>{rank}</Col>\n        </Row>;\n      })}\n\n    </>;\n  }\n\n  function GlobetrotterProgress() {\n    return puzzle ? <>{words.filter(globetrotter).length} / {puzzle.words.filter(globetrotter).length}</> : null;\n  }\n\n  function LengthProgress() {\n    const lengthProgress: Array<{ total: number; found: number; length: number; }> = [];\n    puzzle?.words.forEach((word) => {\n      const length = word.length;\n      if (!(length in lengthProgress)) {\n        lengthProgress[length] = { total: 0, found: 0, length };\n      }\n      lengthProgress[length].total += 1;\n    });\n    words.forEach((word) => {\n      const length = word.length;\n      lengthProgress[length].found += 1;\n    });\n\n    const mostWords = _.max(_.map(lengthProgress, \"total\")) ?? 0;\n    const cols: number[] = [];\n    for (let index = 0; index < mostWords; index++) {\n      cols[index] = index;\n    }\n\n    return <>{lengthProgress.sort().map(({ total, found, length }, index) => <Row key={index}>\n      <Col xs={1}>{length}</Col>\n      {cols.map((index) => <Col key={index} className={index < found ? \"marker-found\" : index < total ? \"marker-unfound\" : \"marker-blank\"} />)}\n    </Row>)}</>;\n  }\n\n  function CheatProgress() {\n    return <>\n      {puzzle?.words.map((word) => <span className=\"m-1\">{word}</span>)}\n    </>;\n  }\n}\n\nfunction puzzleId(puzzle: Puzzle): PuzzleId {\n  return [puzzle.island, ...puzzle.board].join(\"\");\n}\n\nfunction Board({ board, play }: { board: string[], play: (letter: string) => void }) {\n  return <Col xs={\"auto\"} className=\"board\">\n    <Row className=\"board-row-1\">\n      <Cell type=\"sea\" letter={board[0]} play={play} />\n      <Cell type=\"sea\" letter={board[1]} play={play} />\n      <Cell type=\"sea\" letter={board[2]} play={play} />\n    </Row>\n    <Row className=\"board-row-2\">\n      <Col className=\"sea\">\n      </Col>\n      <Cell type=\"island\" letter={board[3]} play={play} />\n      <Col className=\"sea\">\n      </Col>\n    </Row>\n    <Row className=\"board-row-3\">\n      <Cell type=\"sea\" letter={board[4]} play={play} />\n      <Cell type=\"sea\" letter={board[5]} play={play} />\n      <Cell type=\"sea\" letter={board[6]} play={play} />\n    </Row>\n  </Col>;\n}\n\nfunction Cell({ type, play, letter }: { type: \"sea\" | \"island\", play(letter: string): void, letter: string }) {\n  return <Col className={type} key={letter} onClick={play.bind(null, letter)} onKeyUp={console.log}>\n    {letter}\n  </Col>;\n\n}\n\nfunction score(words: string | string[]): number {\n  if (Array.isArray(words)) {\n    return _.sumBy(words, score);\n  }\n  if (words.length <= 4) {\n    return 1;\n  }\n  return words.length - 3 + (globetrotter(words) ? 7 : 0);\n}\n\nfunction globetrotter(words: string) {\n  const letters = _.uniq(words);\n  return letters.length === 7;\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}